// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "cargo prisma"
  output   = "../src/prisma.rs"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Organization {
  id        String   @id @db.Char(12)
  name      String   @db.VarChar(90)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Projects relation
  projects Project[]

  // Users relation
  users User[]
}

model Project {
  id        String   @id @db.Char(12)
  name      String   @db.VarChar(90)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Tests relation
  tests Test[]

  // Organization relations
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
}

model User {
  id        String   @id @db.Char(12)
  email     String   @unique
  password  String   @db.Char(96)
  name      String   @db.VarChar(90)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Token relation
  tokens Token[]

  // Organization relation
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
}

model Test {
  id        String   @id @db.Char(12)
  name      String   @db.VarChar(90)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Projects relation
  project   Project @relation(fields: [projectId], references: [id])
  projectId String

  // Projects relation
  runs TestRun[]
}

enum RunStatus {
  NOT_STARTED
  STARTED
  FINISHED
  ABORTED
}

model TestRun {
  id        String    @id @db.Char(12)
  createdAt DateTime  @default(now())
  status    RunStatus @default(NOT_STARTED)

  // Projects relation
  test   Test   @relation(fields: [testId], references: [id])
  testId String
}

model MetricsCatalog {
  id          Int    @id @default(autoincrement())
  name        String @db.VarChar(50)
  type        String @db.VarChar(50)
  unit        String @db.VarChar(20)
  description String @db.VarChar(255)
}

model Token {
  id         String   @id @db.Char(12)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  valid      Boolean  @default(true)
  expiration DateTime

  // User relation
  user   User   @relation(fields: [userId], references: [id])
  userId String
}
