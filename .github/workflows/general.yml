name: Tonsail General CI/CD
on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.6.2
  SQLX_FEATURES: "rustls,postgres"
  DB_DATABASE: tonsail
  DB_USER: root
  DB_PASSWORD: root
  DATABASE_URL: "mysql://root:root@localhost:3306/tonsail"
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      questdb:
        image: questdb/questdb:6.7
        ports:
          - 8812:8812
      redis:
        image: redis:7
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          key: sqlx-${{ env.SQLX_VERSION }}
      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
      - name: Generate Prisma Client
        run: cargo prisma generate
      - name: Migrate database
        run: cargo prisma db push
      - name: Run tests
        run: cargo test
#
#  fmt:
#    name: Rustfmt
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: dtolnay/rust-toolchain@stable
#        with:
#          components: rustfmt
#      - name: Enforce formatting
#        run: cargo fmt --check
#
#  clippy:
#    name: Clippy
#    runs-on: ubuntu-latest
#    services:
#      postgres:
#        image: postgres:14
#        env:
#          POSTGRES_USER: postgres
#          POSTGRES_PASSWORD: password
#          POSTGRES_DB: postgres
#        ports:
#          - 5432:5432
#    steps:
#     - uses: actions/checkout@v3
#     - uses: dtolnay/rust-toolchain@stable
#        with:
#          components: clippy
#      - uses: Swatinem/rust-cache@v2
#        with:
#          key: sqlx-${{ env.SQLX_VERSION }}
#      - name: Set up MySQL
#        run: sudo /etc/init.d/mysql start
#      - name: Install sqlx-cli
#        run:
#          cargo install sqlx-cli
#            --version=${{ env.SQLX_VERSION }}
#            --features ${{ env.SQLX_FEATURES }}
#           --no-default-features
#            --locked
#      - name: Migrate database
#        run: |
#          sudo apt-get install libpq-dev -y
#          SKIP_DOCKER=true ./scripts/init_db.sh
#      - name: Linting
#        run: cargo clippy -- -D warnings
#
#  coverage:
#    name: Code coverage
#    runs-on: ubuntu-latest
#    services:
#      postgres:
#       image: postgres:14
#       env:
#          POSTGRES_USER: postgres
#          POSTGRES_PASSWORD: password
#          POSTGRES_DB: postgres
#        ports:
#          - 5432:5432
#      redis:
#        image: redis:7
#        ports:
#          - 6379:6379
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#      - uses: dtolnay/rust-toolchain@stable
#      - name: Install libpq
#        run: sudo apt-get update && sudo apt-get install postgresql-client -y
#      - uses: Swatinem/rust-cache@v2
#        with:
#          key: sqlx-${{ env.SQLX_VERSION }}
#      - name: Install tarpaulin
#        run: cargo install cargo-tarpaulin
#      - name: Set up MySQL
#        run: sudo /etc/init.d/mysql start
#     - name: Install sqlx-cli
#        run:
#          cargo install sqlx-cli
#          --version=${{ env.SQLX_VERSION }}
#          --features ${{ env.SQLX_FEATURES }}
#          --no-default-features
#          --locked
#      - name: Migrate database
#        run: SKIP_DOCKER=true ./scripts/init_db.sh
#      - name: Generate code coverage
#        run: cargo tarpaulin --verbose --workspace
